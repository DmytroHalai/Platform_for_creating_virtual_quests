import React, { useState } from "react";
import axios from "axios";

export enum QuestionType {
  Open = "Open answer",
  Test = "Test",
  Find = "Find object",
}

export enum QuestCategory {
  SURVIVAL = "survival",
}

const QuestCreator = () => {
  const [quest, setQuest] = useState({
    title: "–¢–∞–Ω–∫–æ–≤—ã–π —Ä–∞–π",
    photo: "",
    description: "–ü–æ–≥—Ä—É–∑–∏—Å—å –≤ –º–∏—Ä —Ç–∞–Ω–∫–æ–≤",
    time: "60 –º–∏–Ω—É—Ç",
    category: QuestCategory.SURVIVAL,
    tasks: [
      {
        media: "",
        description: "–ö–∞–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è —ç—Ç–æ—Ç —Ç–∞–Ω–∫?",
        question_type: QuestionType.Open,
        answers: [
          { answer: "–¢-34", is_correct: true },
          { answer: "Panzer IV", is_correct: false },
        ],
      },
      {
        media: "",
        description: "–ö–∞–∫–æ–µ —Å–ª–∞–±–æ–µ –º–µ—Å—Ç–æ —É —ç—Ç–æ–≥–æ —Ç–∞–Ω–∫–∞?",
        question_type: QuestionType.Test,
        answers: [
          { answer: "–õ–æ–±–æ–≤–∞—è –±—Ä–æ–Ω—è", is_correct: false },
          { answer: "–ë–æ—Ä—Ç", is_correct: true },
        ],
      },
    ],
  });

  const [photoFile, setPhotoFile] = useState(null);
  const [taskFiles, setTaskFiles] = useState([]);

  // üìå –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ñ–æ—Ç–æ –∫–≤–µ—Å—Ç–∞
  const handlePhotoChange = (event) => {
    setPhotoFile(event.target.files[0]);
  };

  // üìå –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤ –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤
  const handleTaskFileChange = (event, index) => {
    const newFiles = [...taskFiles];
    newFiles[index] = event.target.files[0];
    setTaskFiles(newFiles);
  };

  // üìå –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
  const handleUpload = async () => {
    const formData = new FormData();

    formData.append("title", quest.title);
    formData.append("description", quest.description);
    formData.append("time", quest.time);
    formData.append("category", quest.category);
    formData.append("tasks", JSON.stringify(quest.tasks));

    if (photoFile) {
      formData.append("photo", photoFile);
    }

    taskFiles.forEach((file, index) => {
      if (file) {
        formData.append(`media[${index}]`, file);
      }
    });

    try {
      const response = await axios.post(
        "http://localhost:3000/quests/create",
        formData,
        {
          headers: {
            "Content-Type": "multipart/form-data",
          },
          withCredentials: true, // üîπ –î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ cookies
        }
      );

      console.log("–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", response.data);
      alert("–ö–≤–µ—Å—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!");
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏", error);
      alert("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞!");
    }
  };

  return (
    <div style={{ padding: "20px", fontFamily: "Arial" }}>
      <h1>–°–æ–∑–¥–∞–Ω–∏–µ –∫–≤–µ—Å—Ç–∞</h1>

      {/* –§–æ—Ç–æ –∫–≤–µ—Å—Ç–∞ */}
      <label>–§–æ—Ç–æ –∫–≤–µ—Å—Ç–∞:</label>
      <input type="file" onChange={handlePhotoChange} />

      {/* –ú–µ–¥–∏–∞—Ñ–∞–π–ª—ã –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤ */}
      <h2>–ú–µ–¥–∏–∞ –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤</h2>
      {quest.tasks.map((task, index) => (
        <div key={index}>
          <p>
            –í–æ–ø—Ä–æ—Å {index + 1}: {task.description}
          </p>
          <input type="file" onChange={(e) => handleTaskFileChange(e, index)} />
        </div>
      ))}

      <button onClick={handleUpload}>–°–æ–∑–¥–∞—Ç—å –∫–≤–µ—Å—Ç</button>
    </div>
  );
};

export default QuestCreator;
